% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/circle-package.R, R/endpoints.R
\docType{package}
\name{circleci}
\alias{circleci}
\alias{circleci-package}
\title{Circle CI API Client}
\description{
This package provides functionality for interacting with the
  Circle CI API. Circle is a continuous integration service that allows for
  automated testing of software each time that software is publicly committed
  to a repository on GitHub.

  Once you have your Circle account configured online, you can use this
  package to interact with and perform all operations on your Circle builds
  that you would normally perform via the website. This includes monitoring
  builds, modifying build environment settings and environment variables, and
  cancelling or restarting builds.

  Use of this package requires a Circle API key. The first time a function of
  this package is used, the user will be guided through the creation of a
  key, unless one already exists. API keys are disposable, but should still
  be treated securely.

This package provides functionality for interacting with the Circle CI API. Circle is a continuous integration service that allows for automated testing of software each time that software is publicly committed to a repository on GitHub. Setting up Circle is quite simple, requiring only a GitHub account, some public (or private) repository hosted on GitHub, and logging into to Circle to link it to that repository.

Once you have your Circle account configured online, you can use this package to interact with and perform all operations on your Circle builds that you would normally perform via the website. This includes monitoring builds, modifying build environment settings and environment variables, and cancelling or restarting builds.

Use of this package requires a Circle API key, which can be found [on the Circle CI website](https://circleci.com/account/api). API keys are disposable, but should still be treated securely. To use the key in R, store it as an environment variable using either `Sys.setenv("CIRCLE_CI_KEY" = "examplekey")` or by storing the key in your .Renviron file
}
\examples{
\dontrun{
# check to see if you've authenticated correctly
get_user()
}

\dontrun{
# authenticate using a stored environment variables
Sys.setenv("CIRCLE_CI_KEY" = "examplekey")

# check to see if you've authenticated correctly
get_user()
}

}
